#! /bin/bash
eval src=$1
eval dest=$2
eval archive=$3
eval log=$4

function logmsg { echo $(date -R)": $*" >> $log ; }
function logoutput { while read output; do logmsg $output; done; }

tfile="/tmp/$(basename $0).files.$$.tmp"
tfile2="/tmp/$(basename $0).dirs.$$.tmp"
tfile3="/tmp/$(basename $0).arch.$$.tmp"

touch $tfile
touch $tfile2
touch $tfile3

logmsg "sortvid starting"

#sort files into directories
cd $src
find -maxdepth 1 -type f -daystart -mtime +0 -exec ls -l --time-style long-iso {} \; > $tfile

while read line
do
    filename=$(echo $line | awk '{print $8}')
    filedate=$(echo $line | awk '{print $6}')

    if [ ! -d $dest/$filedate ]; then
	logmsg "creating "$dest/$filedate
	mkdir -p $dest/$filedate
    fi

    mv -vf $filename $dest/$filedate | logoutput
    touch --date=$(echo "$filedate" | sed 's/-//g') $dest/$filedate
done < $tfile

#compress old directories
cd $dest
find -maxdepth 1 -type d -daystart -mtime +6 -exec ls -ld --time-style long-iso {} \; > $tfile2

while read line2
do
   dirname=$(echo $line2 | awk '{print $8}')
   dirdate=$(echo $line2 | awk '{print $6}')
   archivename="${dirname}.tar.gz"

   logmsg "creating "$archivename
   tar zcfv $archivename $dirname | logoutput
   touch --date=$(echo "$dirdate" | sed 's/-//g') $archivename
   rm -rfv $dirname | logoutput
done < $tfile2

#move old archives
find -maxdepth 1 -type f -daystart -mtime +9 -exec ls -l --time-style long-iso {} \; > $tfile3
while read line3
do
   filename=$(echo $line3 | awk '{print $8}')

   if [ ! -d $archive ]; then
       logmsg "creating "$archive
       mkdir -p $archive
   fi

   mv -vf $filename $archive/$filename | logoutput
done < $tfile3

logmsg "sortvid done"

rm $tfile
rm $tfile2
rm $tfile3
